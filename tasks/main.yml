---
- name: setting up pyramid apps
  block:

    - name: generate pyramid production config
      template:
        src: "production.ini.j2"
        dest: "{{ item.base_dir }}/production.ini"
        owner: "www-data"
        group: "www-data"
        mode: "0600"
      loop: "{{ pyramid_apps }}"
    
    - name: check if alembic configs exist
      stat:
        path: "{{ item.base_dir }}/alembic.ini.sample"
      register: "alembic_configs"
      loop: "{{ pyramid_apps }}"

    - name: generate alembic config
      template:
        src: "alembic.ini.j2"
        dest: "{{ item.0.base_dir }}/alembic.ini"
        owner: "www-data"
        group: "www-data"
        mode: "0600"
      when: "item.1.stat.exists"
      loop: "{{ pyramid_apps|zip(alembic_configs.results)|list }}"

    - name: create project database
      script: "setup_dbs.sh '{{ item.0.db_name }}' '{{ item.0.db_encoding }}' '{{ item.0.db_user }}' '{{ item.0.db_pass }}'"
      when: "item.1.stat.exists"
      loop: "{{ pyramid_apps|zip(alembic_configs.results)|list }}"

    - name: run db migration
      command: "{{ item.0.base_dir }}/.venv/bin/alembic upgrade head"
      args:
        chdir: "{{ item.0.base_dir }}"
      when: "item.1.stat.exists"
      loop: "{{ pyramid_apps|zip(alembic_configs.results)|list }}"

    - name: generate nginx config
      template:
        src: "nginx_config.j2"
        dest: "/etc/nginx/sites-available/{{ item.domain_name }}"
        owner: "root"
        group: "root"
        mode: "0644"
      loop: "{{ pyramid_apps }}"

    - name: enable nginx config
      file:
        src: "/etc/nginx/sites-available/{{ item.domain_name }}"
        dest: "/etc/nginx/sites-enabled/{{ item.domain_name }}"
        state: link
      loop: "{{ pyramid_apps }}"

    - name: reload nginx
      systemd:
        name: "nginx"
        state: "reloaded"
  tags:
    - pyramid_apps
